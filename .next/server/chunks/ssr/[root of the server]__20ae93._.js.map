{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/akitoshi/Documents/GitHub/blog.akitoshi-lab.com/src/pages/_app.tsx"],"sourcesContent":["import '../styles/globals.css';\nimport type { AppProps } from 'next/app';\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n"],"names":[],"mappings":";;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/akitoshi/Documents/GitHub/blog.akitoshi-lab.com/src/components/Tweet.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\ndeclare global {\n  interface Window {\n    twttr: {\n      widgets: {\n        load: (element: HTMLElement | null) => void;\n      };\n    };\n  }\n}\n\nexport const Tweet: React.FC<{ id: string }> = ({ id }) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const loadTwitterEmbed = () => {\n      if (window.twttr) {\n        window.twttr.widgets.load(ref.current);\n      }\n    };\n\n    loadTwitterEmbed();\n\n    // 再試行のために監視\n    const observer = new MutationObserver(() => loadTwitterEmbed());\n    if (ref.current) {\n      observer.observe(ref.current, { childList: true });\n    }\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [id]);\n\n  return (\n    <div\n      ref={ref}\n      dangerouslySetInnerHTML={{\n        __html: `<blockquote class=\"twitter-tweet\"><a href=\"https://twitter.com/i/status/${id}\"></a></blockquote>`,\n      }}\n    />\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;;AAYO,MAAM,QAAkC,CAAC,EAAE,EAAE,EAAE;IACpD,MAAM,MAAM,CAAA,GAAA,mGAAA,CAAA,SAAM,AAAD,EAAkB;IAEnC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,mBAAmB;YACvB,IAAI,OAAO,KAAK,EAAE;gBAChB,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,OAAO;YACvC;QACF;QAEA;QAEA,YAAY;QACZ,MAAM,WAAW,IAAI,iBAAiB,IAAM;QAC5C,IAAI,IAAI,OAAO,EAAE;YACf,SAAS,OAAO,CAAC,IAAI,OAAO,EAAE;gBAAE,WAAW;YAAK;QAClD;QAEA,OAAO;YACL,SAAS,UAAU;QACrB;IACF,GAAG;QAAC;KAAG;IAEP,qBACE,qKAAC;QACC,KAAK;QACL,yBAAyB;YACvB,QAAQ,CAAC,wEAAwE,EAAE,GAAG,mBAAmB,CAAC;QAC5G;;;;;;AAGN"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/akitoshi/Documents/GitHub/blog.akitoshi-lab.com/src/components/OGPCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface OGPData {\n  title: string;\n  description: string;\n  image: string;\n  url: string;\n}\n\nexport const OGPCard: React.FC<{ url: string }> = ({ url }) => {\n  const [ogpData, setOgpData] = useState<OGPData | null>(null);\n\n  useEffect(() => {\n    const fetchOgpData = async () => {\n      try {\n        const res = await fetch(`/api/ogp?url=${encodeURIComponent(url)}`);\n        const data = await res.json();\n        if (data) {\n          setOgpData(data);\n        }\n      } catch (error) {\n        console.error('Failed to fetch OGP data:', error);\n      }\n    };\n\n    fetchOgpData();\n  }, [url]);\n\n  if (!ogpData) return null;\n\n  return (\n    <a href={ogpData.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"block border rounded shadow hover:shadow-lg transition-shadow\">\n      <div className=\"flex\">\n        {ogpData.image && (\n          <div className=\"w-1/3\">\n            <img src={ogpData.image} alt={ogpData.title} className=\"rounded-l w-full h-full object-cover\" />\n          </div>\n        )}\n        <div className=\"p-4 w-2/3\">\n          <h2 className=\"text-lg font-bold\">{ogpData.title}</h2>\n          <p className=\"text-sm text-gray-500\">{ogpData.description}</p>\n        </div>\n      </div>\n    </a>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;;AASO,MAAM,UAAqC,CAAC,EAAE,GAAG,EAAE;IACxD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAkB;IAEvD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,IAAI;gBACF,MAAM,MAAM,MAAM,MAAM,CAAC,aAAa,EAAE,mBAAmB,MAAM;gBACjE,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,IAAI,MAAM;oBACR,WAAW;gBACb;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;YAC7C;QACF;QAEA;IACF,GAAG;QAAC;KAAI;IAER,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,qKAAC;QAAE,MAAM,QAAQ,GAAG;QAAE,QAAO;QAAS,KAAI;QAAsB,WAAU;kBACxE,cAAA,qKAAC;YAAI,WAAU;;gBACZ,QAAQ,KAAK,kBACZ,qKAAC;oBAAI,WAAU;8BACb,cAAA,qKAAC;wBAAI,KAAK,QAAQ,KAAK;wBAAE,KAAK,QAAQ,KAAK;wBAAE,WAAU;;;;;;;;;;;8BAG3D,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAG,WAAU;sCAAqB,QAAQ,KAAK;;;;;;sCAChD,qKAAC;4BAAE,WAAU;sCAAyB,QAAQ,WAAW;;;;;;;;;;;;;;;;;;;;;;;AAKnE"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///Users/akitoshi/Documents/GitHub/blog.akitoshi-lab.com/src/lib/preprocessMarkdown.ts"],"sourcesContent":["export default function preprocessMarkdown(markdown: string): string {\n    // :::note info の形式を <div class=\"note info\"> に変換\n    markdown = markdown.replace(/:::note\\s+(\\w+)\\n([\\s\\S]*?)\\n:::/g, (_, type, content) => {\n      return `<div class=\"note ${type}\">\\n${content.trim()}\\n</div>`;\n    });\n  \n    // Markdown画像記法を安全に処理\n    markdown = markdown.replace(/!\\[([^\\]]*)\\]\\((http[^\\)]+)\\)/g, (_, altText, url) => {\n      const encodedUrl = encodeURI(url);\n      return `![${altText}](${encodedUrl})`;\n    });\n  \n    // Xリンクを埋め込みHTMLに変換\n    markdown = markdown.replace(\n      /(https:\\/\\/x\\.com\\/\\w+\\/status\\/\\d+)/g,\n      (url) => {\n        return `<div class=\"x-embed\">\n          <blockquote class=\"twitter-tweet\">\n            <a href=\"${url}\"></a>\n          </blockquote>\n        </div>`;\n      }\n    );\n  \n    return markdown;\n  }\n  "],"names":[],"mappings":";;;AAAe,SAAS,mBAAmB,QAAgB;IACvD,gDAAgD;IAChD,WAAW,SAAS,OAAO,CAAC,qCAAqC,CAAC,GAAG,MAAM;QACzE,OAAO,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE,QAAQ,IAAI,GAAG,QAAQ,CAAC;IAChE;IAEA,qBAAqB;IACrB,WAAW,SAAS,OAAO,CAAC,kCAAkC,CAAC,GAAG,SAAS;QACzE,MAAM,aAAa,UAAU;QAC7B,OAAO,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,WAAW,CAAC,CAAC;IACvC;IAEA,mBAAmB;IACnB,WAAW,SAAS,OAAO,CACzB,yCACA,CAAC;QACC,OAAO,CAAC;;qBAEK,EAAE,IAAI;;cAEb,CAAC;IACT;IAGF,OAAO;AACT"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///Users/akitoshi/Documents/GitHub/blog.akitoshi-lab.com/src/pages/articles/%5Bid%5D.tsx"],"sourcesContent":["import { GetServerSideProps } from 'next';\nimport { useRouter } from 'next/router';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeRaw from 'rehype-raw';\nimport rehypeHighlight from 'rehype-highlight';\nimport Script from 'next/script';\nimport { Tweet } from '@/components/Tweet';\nimport { OGPCard } from '@/components/OGPCard';\nimport preprocessMarkdown from '@/lib/preprocessMarkdown';\nimport Image from 'next/image';\nimport 'highlight.js/styles/github-dark-dimmed.css';\n\ninterface Article {\n  id: number;\n  title: string;\n  content: string;\n  thumbnail: string;\n  created_at: string;\n}\n\ninterface Props {\n  article: Article;\n}\n\nconst ArticlePage = ({ article }: Props) => {\n  const router = useRouter();\n\n  const renderContent = (content: string) => {\n    const imageRegex = /!\\[([^\\]]*)\\]\\((http[^\\)]+)\\)/g; // 画像\n    const tweetRegex = /https:\\/\\/x\\.com\\/\\w+\\/status\\/(\\d+)/g; // Xリンク\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g; // その他のURL\n\n    const parts = [];\n    let lastIndex = 0;\n\n    // 画像を優先して処理\n    content.replace(imageRegex, (match, altText, url, offset) => {\n      if (lastIndex < offset) {\n        parts.push(content.slice(lastIndex, offset));\n      }\n      parts.push(\n        <img\n          key={url}\n          src={url}\n          alt={altText || 'Image'}\n          className=\"rounded my-4 max-w-full\"\n        />\n      );\n      lastIndex = offset + match.length;\n      return match;\n    });\n\n    // 残り部分を次にXリンクとOGP用に処理\n    const remainingContent = content.slice(lastIndex);\n    let remainingIndex = 0;\n\n    remainingContent.replace(urlRegex, (match, url, offset) => {\n      const isTweet = tweetRegex.test(url);\n\n      if (remainingIndex < offset) {\n        parts.push(remainingContent.slice(remainingIndex, offset));\n      }\n\n      if (isTweet) {\n        const tweetId = url.match(tweetRegex)?.[1];\n        if (tweetId) {\n          parts.push(<Tweet key={tweetId} id={tweetId} />);\n        }\n      } else {\n        parts.push(<OGPCard key={url} url={url} />);\n      }\n\n      remainingIndex = offset + match.length;\n      return match;\n    });\n\n    // 最後の部分を追加\n    parts.push(remainingContent.slice(remainingIndex));\n\n    // パーツをレンダリング\n    return parts.map((part, index) =>\n      typeof part === 'string' ? (\n        <ReactMarkdown\n          key={index}\n          rehypePlugins={[rehypeRaw, rehypeHighlight]}\n        >\n          {part}\n        </ReactMarkdown>\n      ) : (\n        part\n      )\n    );\n  };\n\n  if (!article) {\n    return <p className=\"text-center text-gray-500\">記事が見つかりませんでした。</p>;\n  }\n\n  return (\n    <div className=\"container p-4\">\n      <button\n        onClick={() => router.back()}\n        className=\"text-blue-500 hover:underline mb-4 inline-block\"\n      >\n        戻る\n      </button>\n      <h1 className=\"text-4xl font-bold mb-6\">{article.title}</h1>\n\n      {/* サムネイル表示 */}\n      {article.thumbnail && (\n        <div className=\"mb-6\">\n          <Image\n            src={article.thumbnail}\n            alt={article.title}\n            width={800}\n            height={600}\n            className=\"rounded w-full h-auto\"\n          />\n        </div>\n      )}\n\n      <div className=\"prose prose-blue bg-white p-6 rounded shadow\">\n        {renderContent(article.content)}\n      </div>\n      <p className=\"text-gray-500 mt-6\">作成日: {article.created_at}</p>\n      <Script\n        src=\"https://platform.twitter.com/widgets.js\"\n        strategy=\"lazyOnload\"\n        onLoad={() => {\n          if (window.twttr) {\n            window.twttr.widgets.load();\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const { id } = context.params!;\n  const res = await fetch(`http://127.0.0.1:8080/api/articles/${id}`);\n  const article = await res.json();\n\n  // Markdownを前処理して修正\n  article.content = preprocessMarkdown(article.content);\n\n  return { props: { article } };\n};\n\nexport default ArticlePage;\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAeA,MAAM,cAAc,CAAC,EAAE,OAAO,EAAS;IACrC,MAAM,SAAS,CAAA,GAAA,sPAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,gBAAgB,CAAC;QACrB,MAAM,aAAa,kCAAkC,KAAK;QAC1D,MAAM,aAAa,yCAAyC,OAAO;QACnE,MAAM,WAAW,wBAAwB,UAAU;QAEnD,MAAM,QAAQ,EAAE;QAChB,IAAI,YAAY;QAEhB,YAAY;QACZ,QAAQ,OAAO,CAAC,YAAY,CAAC,OAAO,SAAS,KAAK;YAChD,IAAI,YAAY,QAAQ;gBACtB,MAAM,IAAI,CAAC,QAAQ,KAAK,CAAC,WAAW;YACtC;YACA,MAAM,IAAI,eACR,qKAAC;gBAEC,KAAK;gBACL,KAAK,WAAW;gBAChB,WAAU;eAHL;;;;;YAMT,YAAY,SAAS,MAAM,MAAM;YACjC,OAAO;QACT;QAEA,sBAAsB;QACtB,MAAM,mBAAmB,QAAQ,KAAK,CAAC;QACvC,IAAI,iBAAiB;QAErB,iBAAiB,OAAO,CAAC,UAAU,CAAC,OAAO,KAAK;YAC9C,MAAM,UAAU,WAAW,IAAI,CAAC;YAEhC,IAAI,iBAAiB,QAAQ;gBAC3B,MAAM,IAAI,CAAC,iBAAiB,KAAK,CAAC,gBAAgB;YACpD;YAEA,IAAI,SAAS;gBACX,MAAM,UAAU,IAAI,KAAK,CAAC,aAAa,CAAC,EAAE;gBAC1C,IAAI,SAAS;oBACX,MAAM,IAAI,eAAC,qKAAC,oHAAA,CAAA,QAAK;wBAAe,IAAI;uBAAb;;;;;gBACzB;YACF,OAAO;gBACL,MAAM,IAAI,eAAC,qKAAC,sHAAA,CAAA,UAAO;oBAAW,KAAK;mBAAV;;;;;YAC3B;YAEA,iBAAiB,SAAS,MAAM,MAAM;YACtC,OAAO;QACT;QAEA,WAAW;QACX,MAAM,IAAI,CAAC,iBAAiB,KAAK,CAAC;QAElC,aAAa;QACb,OAAO,MAAM,GAAG,CAAC,CAAC,MAAM,QACtB,OAAO,SAAS,yBACd,qKAAC,kIAAA,CAAA,UAAa;gBAEZ,eAAe;oBAAC,0HAAA,CAAA,UAAS;oBAAE,sIAAA,CAAA,UAAe;iBAAC;0BAE1C;eAHI;;;;uBAMP;IAGN;IAEA,IAAI,CAAC,SAAS;QACZ,qBAAO,qKAAC;YAAE,WAAU;sBAA4B;;;;;;IAClD;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBACC,SAAS,IAAM,OAAO,IAAI;gBAC1B,WAAU;0BACX;;;;;;0BAGD,qKAAC;gBAAG,WAAU;0BAA2B,QAAQ,KAAK;;;;;;YAGrD,QAAQ,SAAS,kBAChB,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC,qPAAA,CAAA,UAAK;oBACJ,KAAK,QAAQ,SAAS;oBACtB,KAAK,QAAQ,KAAK;oBAClB,OAAO;oBACP,QAAQ;oBACR,WAAU;;;;;;;;;;;0BAKhB,qKAAC;gBAAI,WAAU;0BACZ,cAAc,QAAQ,OAAO;;;;;;0BAEhC,qKAAC;gBAAE,WAAU;;oBAAqB;oBAAM,QAAQ,UAAU;;;;;;;0BAC1D,qKAAC,sPAAA,CAAA,UAAM;gBACL,KAAI;gBACJ,UAAS;gBACT,QAAQ;oBACN,IAAI,OAAO,KAAK,EAAE;wBAChB,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI;oBAC3B;gBACF;;;;;;;;;;;;AAIR;AAEO,MAAM,qBAAyC,OAAO;IAC3D,MAAM,EAAE,EAAE,EAAE,GAAG,QAAQ,MAAM;IAC7B,MAAM,MAAM,MAAM,MAAM,CAAC,mCAAmC,EAAE,IAAI;IAClE,MAAM,UAAU,MAAM,IAAI,IAAI;IAE9B,mBAAmB;IACnB,QAAQ,OAAO,GAAG,CAAA,GAAA,yHAAA,CAAA,UAAkB,AAAD,EAAE,QAAQ,OAAO;IAEpD,OAAO;QAAE,OAAO;YAAE;QAAQ;IAAE;AAC9B;uCAEe"}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}