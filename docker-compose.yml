version: '3.9'

services:
  # PostgreSQLデータベース
  postgres:
    image: postgres:16-alpine
    container_name: blog_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-bloguser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-blogpassword}
      POSTGRES_DB: ${POSTGRES_DB:-blog_db}
      TZ: Asia/Tokyo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-bloguser} -d ${POSTGRES_DB:-blog_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - blog_network

  # pgAdmin (データベース管理UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: blog_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@blog.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - blog_network

  # Next.jsアプリケーション
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: blog_nextjs
    restart: unless-stopped
    environment:
      # データベース接続
      DATABASE_URL: postgresql://${POSTGRES_USER:-bloguser}:${POSTGRES_PASSWORD:-blogpassword}@postgres:5432/${POSTGRES_DB:-blog_db}
      
      # Next.js設定
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_TELEMETRY_DISABLED: 1
      
      # NextAuth設定
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      GITHUB_ID: ${GITHUB_ID}
      GITHUB_SECRET: ${GITHUB_SECRET}
    ports:
      - "3000:3000"
    volumes:
      # 開発時のホットリロード用
      - ./src:/app/src
      - ./public:/app/public
      - ./next.config.ts:/app/next.config.ts
      - ./tailwind.config.ts:/app/tailwind.config.ts
      - ./tsconfig.json:/app/tsconfig.json
      - ./postcss.config.mjs:/app/postcss.config.mjs
      # node_modulesは除外
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - blog_network
    command: pnpm dev

  # バックアップサービス
  backup:
    image: postgres:16-alpine
    container_name: blog_backup
    restart: unless-stopped
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD:-blogpassword}
    volumes:
      - ./backups:/backups
      - ./docker/scripts:/scripts
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - blog_network
    entrypoint: ["/scripts/backup.sh"]

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  blog_network:
    driver: bridge